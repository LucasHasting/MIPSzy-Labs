#load values and check for input
addi $t0, $zero, 8196

jal check_input
lw $t1, 0($t0)

jal check_input
lw $t2, 0($t0)

jal check_input
lw $t3, 0($t0)

#push
addi $sp, $sp, -4
sw $t1, 0($sp)

addi $sp, $sp, -4
sw $t2, 0($sp)

addi $sp, $sp, -4
sw $t3, 0($sp)

#calculate
jal calculate
addi $sp, $sp, 4
sw $t3, 4($t0)

#pop the stack
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4

j end

calculate:
#retrieve off stack
 lw $t1, 0($sp) #3-ptrs
 lw $t2, 4($sp) #2-ptrs
 lw $t3, 8($sp) #free throws

#calculate
addi $t4, $zero, 3
add $t2, $t2, $t2
mul $t1, $t4, $t1
add $t3, $t3, $t2
add $t3, $t3, $t1

#push
addi $sp, $sp, -4
sw $t3, 0($sp)
jr $ra

check_input:
addi $t4, $zero, 8192
lw $t4, 0($t4)
beq $t4, $zero, end
jr $ra

end: